{"ast":null,"code":"import { CATEGORY_CREATE_FAIL, CATEGORY_CREATE_REQUEST, CATEGORY_CREATE_SUCCESS, CATEGORY_DELETE_FAIL, CATEGORY_DELETE_REQUEST, CATEGORY_DELETE_SUCCESS, CATEGORY_EDIT_FAIL, CATEGORY_EDIT_REQUEST, CATEGORY_EDIT_SUCCESS, CATEGORY_LIST_FAIL, CATEGORY_LIST_REQUEST, CATEGORY_LIST_SUCCESS, CATEGORY_UPDATE_FAIL, CATEGORY_UPDATE_REQUEST, CATEGORY_UPDATE_SUCCESS } from \"../Constants/CategoryConstants\";\nimport axios from \"axios\";\nimport { logout } from \"./UserActions\";\n\n// Category list\nexport const lisCategories = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CATEGORY_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/categories/all`, config);\n    dispatch({\n      type: CATEGORY_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: CATEGORY_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n// Create category\nexport const createCategory = (name, description) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CATEGORY_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/categories/`, {\n      name,\n      description\n    }, config);\n    dispatch({\n      type: CATEGORY_CREATE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: CATEGORY_EDIT_SUCCESS,\n      payload: data\n    });\n    dispatch(lisCategories());\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: CATEGORY_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n// Delete category\nexport const deleteCategory = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CATEGORY_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.delete(`/api/categories/${id}`, config);\n    dispatch({\n      type: CATEGORY_DELETE_SUCCESS\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: CATEGORY_DELETE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n// Edit category\nexport const editCategory = id => async dispatch => {\n  try {\n    dispatch({\n      type: CATEGORY_EDIT_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/categories/${id}`);\n    dispatch({\n      type: CATEGORY_EDIT_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: CATEGORY_EDIT_FAIL,\n      payload: message\n    });\n  }\n};\n\n// Update category\nexport const updateCategory = category => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CATEGORY_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      \"Content-Type\": \"application/json\",\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/categories/${category._id}`, category, config);\n    dispatch({\n      type: CATEGORY_UPDATE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: CATEGORY_EDIT_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: CATEGORY_UPDATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"names":["CATEGORY_CREATE_FAIL","CATEGORY_CREATE_REQUEST","CATEGORY_CREATE_SUCCESS","CATEGORY_DELETE_FAIL","CATEGORY_DELETE_REQUEST","CATEGORY_DELETE_SUCCESS","CATEGORY_EDIT_FAIL","CATEGORY_EDIT_REQUEST","CATEGORY_EDIT_SUCCESS","CATEGORY_LIST_FAIL","CATEGORY_LIST_REQUEST","CATEGORY_LIST_SUCCESS","CATEGORY_UPDATE_FAIL","CATEGORY_UPDATE_REQUEST","CATEGORY_UPDATE_SUCCESS","axios","logout","lisCategories","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","get","payload","error","message","response","createCategory","name","description","post","deleteCategory","id","delete","editCategory","updateCategory","category","put","_id"],"sources":["D:/ShoeShop-20231125T093846Z-001/iTechStore/Backend/src/redux/Actions/CategoryActions.js"],"sourcesContent":["import {\r\n  CATEGORY_CREATE_FAIL,\r\n  CATEGORY_CREATE_REQUEST,\r\n  CATEGORY_CREATE_SUCCESS,\r\n  CATEGORY_DELETE_FAIL,\r\n  CATEGORY_DELETE_REQUEST,\r\n  CATEGORY_DELETE_SUCCESS,\r\n  CATEGORY_EDIT_FAIL,\r\n  CATEGORY_EDIT_REQUEST,\r\n  CATEGORY_EDIT_SUCCESS,\r\n  CATEGORY_LIST_FAIL,\r\n  CATEGORY_LIST_REQUEST,\r\n  CATEGORY_LIST_SUCCESS,\r\n  CATEGORY_UPDATE_FAIL,\r\n  CATEGORY_UPDATE_REQUEST,\r\n  CATEGORY_UPDATE_SUCCESS,\r\n} from \"../Constants/CategoryConstants\";\r\nimport axios from \"axios\";\r\nimport { logout } from \"./UserActions\";\r\n\r\n// Category list\r\nexport const lisCategories = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: CATEGORY_LIST_REQUEST });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: { Authorization: `Bearer ${userInfo.token}` },\r\n    };\r\n    const { data } = await axios.get(`/api/categories/all`, config);\r\n    dispatch({ type: CATEGORY_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: CATEGORY_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Create category\r\nexport const createCategory =\r\n  (name, description) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: CATEGORY_CREATE_REQUEST });\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n      const config = {\r\n        headers: { Authorization: `Bearer ${userInfo.token}` },\r\n      };\r\n      const { data } = await axios.post(\r\n        `/api/categories/`,\r\n        { name, description },\r\n        config\r\n      );\r\n      dispatch({ type: CATEGORY_CREATE_SUCCESS, payload: data });\r\n      dispatch({ type: CATEGORY_EDIT_SUCCESS, payload: data });\r\n      dispatch(lisCategories());\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      if (message === \"Not authorized, token failed\") {\r\n        dispatch(logout());\r\n      }\r\n      dispatch({\r\n        type: CATEGORY_CREATE_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n// Delete category\r\nexport const deleteCategory = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: CATEGORY_DELETE_REQUEST });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: { Authorization: `Bearer ${userInfo.token}` },\r\n    };\r\n    await axios.delete(`/api/categories/${id}`, config);\r\n\r\n    dispatch({ type: CATEGORY_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: CATEGORY_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Edit category\r\nexport const editCategory = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: CATEGORY_EDIT_REQUEST });\r\n    const { data } = await axios.get(`/api/categories/${id}`);\r\n    dispatch({ type: CATEGORY_EDIT_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: CATEGORY_EDIT_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\n// Update category\r\nexport const updateCategory = (category) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: CATEGORY_UPDATE_REQUEST });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      \"Content-Type\": \"application/json\",\r\n      headers: { Authorization: `Bearer ${userInfo.token}` },\r\n    };\r\n    const { data } = await axios.put(\r\n      `/api/categories/${category._id}`,\r\n      category,\r\n      config\r\n    );\r\n\r\n    dispatch({ type: CATEGORY_UPDATE_SUCCESS, payload: data });\r\n    dispatch({ type: CATEGORY_EDIT_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: CATEGORY_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}